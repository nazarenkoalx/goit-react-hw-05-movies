{"version":3,"file":"static/js/650.a13d3305.chunk.js","mappings":"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","sources":["components/ReviewList/ReviewList.styled.js","components/ReviewListItem/ReviewListItem.styled.js","components/ReviewListItem/ReviewListItem.js","components/ReviewList/RewiewList.js","../node_modules/nanoid/index.browser.js","components/Reviews/Reviews.js","components/Toasts/Toasts.js","services/serviceAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewListStyled = styled.ul`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  margin-top: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const ReviewListItemStyled = styled.li``;\nexport const ReviewAuthor = styled.h3``;\nexport const ReviewContent = styled.p``;\nexport const ReviewDate = styled.p``;\n","import {\n  ReviewListItemStyled,\n  ReviewAuthor,\n  ReviewContent,\n  ReviewDate,\n} from './ReviewListItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const ReviewListItem = ({ author, content, created_at }) => {\n  return (\n    <ReviewListItemStyled>\n      <article>\n        <ReviewAuthor>{author}</ReviewAuthor>\n        <ReviewDate>{created_at}</ReviewDate>\n        <ReviewContent>{content}</ReviewContent>\n      </article>\n    </ReviewListItemStyled>\n  );\n};\n\nReviewListItem.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  created_at: PropTypes.string.isRequired,\n};\n","import { ReviewListStyled } from './ReviewList.styled';\nimport { ReviewListItem } from 'components/ReviewListItem/ReviewListItem';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\n\nexport const ReviewList = ({ reviews }) => {\n  return (\n    <ReviewListStyled>\n      {reviews.map(review => {\n        const { author, content, created_at } = review;\n        return (\n          <ReviewListItem\n            key={nanoid()}\n            author={author}\n            content={content}\n            created_at={created_at}\n          />\n        );\n      })}\n    </ReviewListStyled>\n  );\n};\n\nReviewList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      created_at: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getReviewsById } from 'services/serviceAPI';\nimport { errorToast } from '../Toasts/Toasts';\nimport { ReviewList } from 'components/ReviewList/RewiewList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  useEffect(() => {\n    setReviews([]);\n    setError('');\n    setLoading(true);\n    getReviewsById(id)\n      .then(data => {\n        if (data.length === 0) {\n          return errorToast('Unfortunately nobody reviewed this movie');\n        }\n        setReviews(data);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [id]);\n\n  useEffect(() => {\n    if (error !== '') {\n      errorToast(\n        'smth went wrong, redirecting to the movie page, wait a second pls'\n      );\n      setTimeout(() => {\n        navigate(`/movies/${id}`);\n      }, 1000);\n    }\n  }, [error, id, navigate]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <div>smth went wrong</div>}\n      {reviews.length > 0 && <ReviewList reviews={reviews} />}\n    </>\n  );\n};\n\nexport default Reviews;\n","import { toast } from 'react-toastify';\n\nexport const errorToast = string =>\n  toast.error(`${string}`, {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'dark',\n  });\n","import axios from 'axios';\n\nconst API_KEY = 'd60997a7e23cda835c1c23368c69f903';\n\nexport async function getTrendingMovies() {\n  try {\n    const { data } = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/week',\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    const normalisedMovies = data.results.map(\n      ({ id, title, poster_path, vote_average, genre_ids }) => ({\n        id,\n        title,\n        poster_path,\n        vote_average,\n      })\n    );\n    return normalisedMovies;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport async function searchMovies(searchQuery) {\n  try {\n    const { data } = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        params: {\n          api_key: API_KEY,\n          language: 'en-US',\n          page: 1,\n          include_adult: false,\n          query: searchQuery,\n        },\n      }\n    );\n    const normalisedMovies = data.results.map(\n      ({ id, title, poster_path, vote_average, genre_ids }) => ({\n        id,\n        title,\n        poster_path,\n        vote_average,\n      })\n    );\n    return normalisedMovies;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}`,\n      {\n        params: {\n          api_key: API_KEY,\n          language: 'en-US',\n        },\n      }\n    );\n\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits`,\n      {\n        params: {\n          api_key: API_KEY,\n          language: 'en-US',\n        },\n      }\n    );\n    const cast = data.cast.map(({ id, character, name, profile_path }) => {\n      return { id, character, name, profile_path };\n    });\n\n    return cast;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport async function getReviewsById(id) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews`,\n      {\n        params: {\n          api_key: API_KEY,\n          language: 'en-US',\n          page: 1,\n        },\n      }\n    );\n    const reviews = data.results.map(({ author, content, created_at }) => {\n      return { author, content, created_at };\n    });\n    return reviews;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n"],"names":["ReviewListStyled","styled","ReviewListItemStyled","ReviewAuthor","ReviewContent","ReviewDate","ReviewListItem","author","content","created_at","ReviewList","reviews","map","review","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","nanoid","useState","setReviews","error","setError","loading","setLoading","navigate","useNavigate","useParams","useEffect","getReviewsById","then","data","length","errorToast","catch","finally","setTimeout","Loader","string","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","API_KEY","getTrendingMovies","axios","params","api_key","normalisedMovies","results","title","poster_path","vote_average","genre_ids","Error","searchMovies","searchQuery","language","page","include_adult","query","getMovieById","getCastById","cast","character","name","profile_path"],"sourceRoot":""}