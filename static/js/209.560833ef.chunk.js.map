{"version":3,"file":"static/js/209.560833ef.chunk.js","mappings":"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","sources":["components/Toasts/Toasts.js","components/GoBackBtn/GoBackBtn.styled.js","components/GoBackBtn/GoBackBtn.js","components/SingleMovieCard/SingleMovieCard.styled.js","components/SingleMovieCard/SingleMovieCard.js","pages/MovieDetails.js","services/serviceAPI.js"],"sourcesContent":["import { toast } from 'react-toastify';\n\nexport const errorToast = string =>\n  toast.error(`${string}`, {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'dark',\n  });\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  display: block;\n  padding: 10px;\n  border: 1px solid black;\n  border-radius: 4px;\n  width: 65px;\n  text-align: center;\n  &:hover,\n  &:focus {\n    background-color: orange;\n    scale: 1.1;\n  }\n`;\n","import { BackLink } from './GoBackBtn.styled';\nimport PropTypes from 'prop-types';\nexport const GoBackBtn = ({ path }) => {\n  return <BackLink to={path}> Go back </BackLink>;\n};\n\nGoBackBtn.propTypes = {\n  path: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieArticle = styled.article`\n  margin-top: 20px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nexport const Image = styled.img`\n  max-width: 350px;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const Overview = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const Votes = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const LinkWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 20px;\n  border: 1px solid black;\n  border-radius: 4px;\n  &:hover,\n  &:focus {\n    scale: 1.2;\n    background-color: orange;\n  }\n`;\n","import { GoBackBtn } from 'components/GoBackBtn/GoBackBtn';\nimport { Outlet } from 'react-router-dom';\nimport noPhoto from '../../images/no-photo.png';\nimport {\n  MovieInfo,\n  Image,\n  MovieTitle,\n  Overview,\n  Votes,\n  LinkWrapper,\n  StyledLink,\n  MovieArticle,\n} from './SingleMovieCard.styled';\nimport PropTypes from 'prop-types';\n\nexport const SingleMovieCard = ({ movie, location }) => {\n  const { poster_path, original_title, overview, vote_average } = movie;\n\n  const posterBaseUrl = 'https://www.themoviedb.org/t/p/w500';\n  const posterPath =\n    poster_path === null ? `${noPhoto}` : `${posterBaseUrl}${poster_path}`;\n  const goBackPath = location.state?.from ?? { pathname: '/' };\n  return (\n    <MovieArticle>\n      <GoBackBtn path={goBackPath} />\n      <MovieInfo>\n        <Image src={posterPath} loading=\"lazy\" alt={original_title} />\n        <div>\n          <MovieTitle>{original_title}</MovieTitle>\n          <Overview>Overview: {overview}</Overview>\n          <Votes>Votes: {vote_average}</Votes>\n\n          <LinkWrapper>\n            <StyledLink to={`cast`}>Cast</StyledLink>\n            <StyledLink to={`reviews`}>Reviews</StyledLink>\n          </LinkWrapper>\n        </div>\n      </MovieInfo>\n      <Outlet />\n    </MovieArticle>\n  );\n};\n\nSingleMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string,\n    overview: PropTypes.string,\n    vote_average: PropTypes.number,\n  }).isRequired,\n  location: PropTypes.object.isRequired,\n};\n","import { SingleMovieCard } from 'components/SingleMovieCard/SingleMovieCard';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/serviceAPI';\nimport { Loader } from 'components/Loader/Loader';\nimport { errorToast } from 'components/Toasts/Toasts';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setMovie({});\n    setError('');\n    setLoading(true);\n    getMovieById(id)\n      .then(data => {\n        if (data.length === 0) {\n          return errorToast('Unfortunately no details with this movie');\n        }\n        setMovie(data);\n      })\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [id]);\n\n  useEffect(() => {\n    if (error !== '') {\n      errorToast(\n        'smth went wrong, redirecting to the main page, wait a second pls'\n      );\n      setTimeout(() => {\n        navigate(`/`);\n      }, 2000);\n    }\n  }, [error, navigate]);\n\n  return (\n    <main>\n      {loading && <Loader />}\n      <SingleMovieCard movie={movie} location={location} />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'd60997a7e23cda835c1c23368c69f903';\n\nexport async function getTrendingMovies() {\n  try {\n    const { data } = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/week',\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    const normalisedMovies = data.results.map(\n      ({ id, title, poster_path, vote_average, genre_ids }) => ({\n        id,\n        title,\n        poster_path,\n        vote_average,\n      })\n    );\n    return normalisedMovies;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport async function searchMovies(searchQuery) {\n  try {\n    const { data } = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        params: {\n          api_key: API_KEY,\n          language: 'en-US',\n          page: 1,\n          include_adult: false,\n          query: searchQuery,\n        },\n      }\n    );\n    const normalisedMovies = data.results.map(\n      ({ id, title, poster_path, vote_average, genre_ids }) => ({\n        id,\n        title,\n        poster_path,\n        vote_average,\n      })\n    );\n    return normalisedMovies;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}`,\n      {\n        params: {\n          api_key: API_KEY,\n          language: 'en-US',\n        },\n      }\n    );\n\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits`,\n      {\n        params: {\n          api_key: API_KEY,\n          language: 'en-US',\n        },\n      }\n    );\n    const cast = data.cast.map(({ id, character, name, profile_path }) => {\n      return { id, character, name, profile_path };\n    });\n\n    return cast;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nexport async function getReviewsById(id) {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews`,\n      {\n        params: {\n          api_key: API_KEY,\n          language: 'en-US',\n          page: 1,\n        },\n      }\n    );\n    const reviews = data.results.map(({ author, content, created_at }) => {\n      return { author, content, created_at };\n    });\n    return reviews;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n"],"names":["errorToast","string","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","BackLink","styled","Link","GoBackBtn","path","to","MovieArticle","MovieInfo","Image","MovieTitle","Overview","Votes","LinkWrapper","StyledLink","SingleMovieCard","movie","location","poster_path","original_title","overview","vote_average","posterPath","noPhoto","goBackPath","state","from","pathname","src","loading","alt","useState","setMovie","error","setError","setLoading","id","useParams","useLocation","navigate","useNavigate","useEffect","getMovieById","then","data","length","catch","finally","setTimeout","Loader","API_KEY","getTrendingMovies","axios","params","api_key","normalisedMovies","results","map","title","genre_ids","Error","searchMovies","searchQuery","language","page","include_adult","query","getCastById","cast","character","name","profile_path","getReviewsById","reviews","author","content","created_at"],"sourceRoot":""}